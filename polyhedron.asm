10 OSWRCH=&FFE3
20 DIM GAP% 200
30 DIM data &18
35 DIM ofset_data &30
40 FOR opt%=0 TO 3 STEP 3

50 P%=GAP%

60 [
70 OPT opt% \suppress error messages on first pass

80 .data
81 EQUB 25
82 EQUB 4
83 EQUW 125
84 EQUW 250
85 EQUB 25
86 EQUB 5
87 EQUW 5
88 EQUW 5
89 EQUB 25
90 EQUB 5
91 EQUW 250
92 EQUW 5
93 EQUB 25
94 EQUB 5
95 EQUW 125
96 EQUW 250

100 .offset_data \just an x-y offset to add to each vertex
101 EQUB 0
102 EQUB 0
103 EQUB 0
104 EQUB 0
105 EQUB 0
106 EQUB 0
107 EQUB 0
108 EQUB 0

110 EQUB 0
111 EQUB 0
112 EQUB 25
113 EQUB 0
114 EQUB -25
115 EQUB 0
116 EQUB 0
117 EQUB 0

120 EQUB 0
121 EQUB 0
122 EQUB 50
123 EQUB 0
124 EQUB -50
125 EQUB 0
126 EQUB 0
127 EQUB 0

130 EQUB 0
131 EQUB 0
132 EQUB 75
133 EQUB 0
134 EQUB -75
135 EQUB 0
136 EQUB 0
137 EQUB 0

140 EQUB 0
141 EQUB 0
142 EQUB 100
143 EQUB 0
144 EQUB -100
145 EQUB 0
146 EQUB 0
147 EQUB 0

150 EQUB 0
151 EQUB 0
152 EQUB 125
153 EQUB 0
154 EQUB -125
155 EQUB 0
156 EQUB 0
157 EQUB 0

160 EQUB 0
161 EQUB 0
162 EQUB 150
163 EQUB 0
164 EQUB -150
165 EQUB 0
166 EQUB 0
167 EQUB 0

170 EQUB 0
171 EQUB 0
172 EQUB 175
173 EQUB 0
174 EQUB -175
175 EQUB 0
176 EQUB 0
177 EQUB 0

180 EQUB 0
181 EQUB 0
182 EQUB 200
183 EQUB 0
184 EQUB -200
185 EQUB 0
186 EQUB 0
187 EQUB 0

190 EQUB 0
191 EQUB 0
192 EQUB 225
193 EQUB 0
194 EQUB -225
195 EQUB 0
196 EQUB 0
197 EQUB 0

200 .entry LDX #0 \ set data block offset to zero
201 LDA #22\screen mode to 4
202 JSR OSWRCH
203 LDA #4
204 JSR OSWRCH
205 LDY #0

210 .loop 
211 LDA data,X \ load VDU parameter from data block 
212 JSR OSWRCH \ perform VDU command
213 INX \ increment offset
214 LDA data,X  \second vdu parameter
215 JSR OSWRCH 
216 INX 
217 LDA data,X \ left byte of x coord
218 ADC offset_data, Y \onlyt this one has an effect
219 JSR OSWRCH 
220 INX 
221 LDA data,X \right byte of x coord
\119 ADC offset_data, Y
222 JSR OSWRCH
223 INX
224 INY
225 LDA data,X \left byte of y coord
226 ADC offset_data, Y
227 JSR OSWRCH
228 INX 
229 LDA data,X \ right byte of y coord
\128 ADC offset_data, Y
230 JSR OSWRCH
231 INX
232 INY 

240 CPX #24 \ has all data been loaded?
241 BNE loop \ if not, load next line
242 LDA #12 \clear screen
243 JSR OSWRCH 
244 LDX #0
245 CPY #48 \has full sequence been loaded?
246 BNE loop \if not draw next shape
247 LDY #0 \ return to BASIC
248 JSR loop


300 ]

310 NEXT
340 CALL entry